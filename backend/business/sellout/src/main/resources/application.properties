# =========================================================
# App
# =========================================================
spring.application.name=business-sellout
server.port=8091

# =========================================================
# DataSource (SQL Server)
# =========================================================
spring.datasource.url=jdbc:sqlserver://192.168.246.26:1433;databaseName=SELLOUT;encrypt=true;trustServerCertificate=true;applicationName=business-sellout
spring.datasource.username=sa
spring.datasource.password=ManSQL2024
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# --- HikariCP: dimensiona según tu servidor ---
# Tamaño máximo de conexiones simultáneas
spring.datasource.hikari.maximumPoolSize=30
# Mínimo de conexiones inactivas
spring.datasource.hikari.minimumIdle=10
# Tiempo máx. de espera por una conexión (ms)
spring.datasource.hikari.connectionTimeout=30000
# Tiempo máx. que una conexión puede estar inactiva (ms)
spring.datasource.hikari.idleTimeout=600000
# Vida máx. de una conexión (ms) (renovación periódica)
spring.datasource.hikari.maxLifetime=1800000
# Detecta posibles fugas de conexiones > 2 min (opcional, comentar en prod si molesta)
spring.datasource.hikari.leakDetectionThreshold=120000
# Autocommit lo maneja Hibernate/Tx (mejor desempeño en batch)
spring.datasource.hikari.auto-commit=false

# Sugerencia de performance del driver (strings no-Unicode si tu data lo permite)
spring.datasource.hikari.data-source-properties.sendStringParametersAsUnicode=false

# =========================================================
# JPA / Hibernate (batch + memoria)
# =========================================================
spring.jpa.open-in-view=false

# Dialecto: Hibernate suele detectar, pero mejor fijarlo para SQL Server (ajusta a tu versión)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect

# Batching real
spring.jpa.properties.hibernate.jdbc.batch_size=1000
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
# Desactiva autocommit interno del provider (recomendado)
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# Fetch por defecto de colecciones (NO afecta tus inserts, pero ayuda en lecturas masivas)
spring.jpa.properties.hibernate.default_batch_fetch_size=1000

# LOB sin contexto (evita warnings/overhead con LOBs)
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Evitar overhead de estadísticas y logs de SQL durante carga masiva
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.generate_statistics=false
# logging.level.org.hibernate.SQL=INFO
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO

# Si usas IDs con SEQUENCE, el allocationSize ayuda al batch (ajusta si migras desde IDENTITY)
# spring.jpa.hibernate.use-new-id-generator-mappings=true

# =========================================================
# Upload (ya alto para Excels grandes)
# =========================================================
spring.servlet.multipart.max-file-size=256MB
spring.servlet.multipart.max-request-size=256MB

# =========================================================
# Swagger
# =========================================================
springdoc.swagger-ui.path=/swagger.html
springdoc.swagger-ui.enabled=true

# =========================================================
# Eureka / Actuator
# =========================================================
eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER:http://192.168.246.232:8761/eureka}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.healthcheck.enabled=true
eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=192.168.246.233
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details= ALWAYS

# =========================================================
# Config Server (deshabilitado)
# =========================================================
spring.cloud.config.enabled=false

# =========================================================
# DDL (controlado por migraciones; activa bajo tu propio riesgo)
# =========================================================
# spring.jpa.hibernate.ddl-auto=update
